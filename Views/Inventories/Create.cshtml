@model InventoryApp.Models.Inventory

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Ajax.BeginForm("Create", "Inventory", new AjaxOptions { HttpMethod = "POST", OnSuccess = "onAjaxRequestSuccess" },
                                                                    new { @id = "AjaxformId", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Inventory</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Name)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Color)
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Price)
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Stores.Id)
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<div id="PartialRender"></div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

    $(document).ready(function () {

        //When the page loads. We will call LoadData
        LoadData();

        /*
        When the form AjaxFormId is submitted, we will call the function LoadData.
        */
        $("#AjaxformId").submit(function (event) {
            var dataString;
            event.preventDefault();
            event.stopImmediatePropagation();
            var action = $("#AjaxformId").attr("action");
            // Setting.  
            dataString = new FormData($("#AjaxformId").get(0));
            contentType = false;
            processData = false;
            $.ajax({
                type: "POST",
                url: action,
                data: dataString,
                dataType: "json",
                contentType: contentType,
                processData: processData,
                success: function (result) {
                    // Result.  
                    LoadData(); //Load the partial view if the request is successful
 
                    $("#AjaxformId").find("input[type=text], textarea, input[type=number]").val("");
                    
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    //do your own thing  
                    alert("fail");
                }
            });

        }); //end .submit()  

        function LoadData() {
            $("#PartialRender").load(
                '@(Url.Action("GetPartialView", "Stores",null, Request.Url.Scheme))?Id=' + @Model.Stores.Id
         );
        }
    });
   
    </script>
}